// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  email          String      @unique
  username       String?
  password       String?
  repeatPassword String?
  groceries      Groceries[]
  posts Post[]
}

model Groceries {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  title        String
  description  String         
  url          String         @default("") @unique
  slug         String         @default("")
  lastPrice    Float
  priceHistory PriceHistory[]
  vendor       Vendor         @relation(fields: [vendorId], references: [id])
  vendorId     Int            @default(1)
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  imageSrc     String         @default("")
  priceUpdateStatus Int       @default(1) //1-Done, 2 - SQS Sent, 3 - Processing, 0 - fail
  postGroceries PostGroceries[]
  hasDiscount Boolean @default(false)
}

model PostGroceries {
  id Int @id @default(autoincrement())
  grocery Groceries @relation(fields: [groceryId], references: [id])
  groceryId Int 
  post Post @relation(fields: [postId], references: [id])
  postId String
  quantity Int
  quantityUnit String
  neededQuantity Int
  neededQuantityUnit String
}

model Post {
  id String @id @default(uuid())
  title       String  @default("")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  slug String @unique
  imageSrc String @default("")
  description String @default("")
  vendors Vendor[]
  enabled Int @default(1)
  content Json
  isDraft Boolean @default(false)
  postGroceries PostGroceries[]
}

model PriceHistory {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  price     Float
  grocery   Groceries @relation(fields: [groceryId], references: [id], onDelete: Cascade)
  groceryId Int
}

model Vendor {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  groceries Groceries[]
  title     String
  posts Post[]
}
